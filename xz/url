1.输入地址    2。浏览器查找域名的ip地址 （这一步包括DNS具体的查找过程，包括浏览器缓存-》系统缓存-》路由缓存。。。） 3.浏览器向web服务器发送http请求 4.服务器的永久重定向响应（http：//example.com到http://www.example.com） 5.浏览器跟踪重定向地址 6.服务器处理请求 7服务器返回一个http响应 8.浏览器显示html 9.浏览器发送请求嵌入在html中的资源（如图片，音频，视频，css，js等等）10.浏览器发送异步请求

accept:浏览器可以接受的媒体类型 accept:text/html 代表浏览器可以接受服务器返回的类型为text/html也就是我们常说的html文档 如果服务器无法返回text/html类型的数据，服务器应该返回一个406错误 non acceptable 通配符*代表任意类型 accept-encoding :浏览器申明接受的编码方式，通常指定压缩方法 是否支持压缩，支持什么压缩方式 gzip deflate(这不是只字符编码)；zh-CN,zh:q=0.8   accept-language:浏览器申明自己接受的语言 语言跟字符聚的区别：中文是语言 中文有多种字符集 比如big gb2312 gbk等等 connenction:keep-alive 当一个网页打开完成后 客户端和服务端之间用于传输http的tcp连接不会关闭，如果客户端客户端再次访问服务器上的网页，会继续使用这一条已经建立的连接 connection：close 代表一个request完成后，客户端和服务器之间用于传输http数据的tcp链接会关闭 当客户端再次发送request 需要重新建立tcp链接   host:请求报头域名主要用于指定被资源的internet主机和端口号 他/她通常从http url中提取出来的 referer 当浏览器向web服务器发送请求的时候，一般会带上referer 告诉服务器我是从哪个页面链接过来的，服务器为此可以获取一些信息用于处理，比如我从主页面的链接到一个朋友那里，他的服务器能够从http referer中统计出每天有多少用户点击我的主页面上的链接访问他的网站 user-agent：告诉http服务器，客户端使用的操作系统和浏览器的名称和版本


git fetch origin master:tmp 
git diff tmp    
git merge tmp

git fetch origin 
git diff master origin/master
我:
git fetch：相当于是从远程获取最新版本到本地，不会自动merge